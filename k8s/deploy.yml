kind: Namespace
apiVersion: v1
metadata:
  name: agv-doc
  labels:
    name: agv-doc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agv-doc
  namespace: agv-doc
  labels:
    app: agv-doc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agv-doc
  template:
    metadata:
      labels:
        app: agv-doc
    spec:
      containers:
      - name: agv-doc-container
        image: registry.gitlab.com/redviking/agv-pd/rv-agv-documentation
        ports:
        - containerPort: 80
        imagePullPolicy: Always
      imagePullSecrets:
      - name: docker-registry
---
apiVersion: v1
kind: Service
metadata:
  name: agv-doc
  namespace: agv-doc
spec:
  selector:
    app: agv-doc
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agv-doc
  namespace: agv-doc
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
spec:
  rules:
  - host: agv-doc.rv-argonaut.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: agv-doc
            port:
              number: 8000
  tls:
  - hosts:
    - agv-doc.rv-argonaut.com
    secretName: agvdoc-tls

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: agv-doc
spec:
  ingressClassName: nginx
  rules:
  - host: agv-doc.rv-argonaut.com
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
  tls:
  - hosts:
    - agv-doc.rv-argonaut.com
    secretName: agvdoc-tls
